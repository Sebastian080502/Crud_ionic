name: CI

on:
  push:
    branches: [ main, dev, qa ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      # Perfil de test
      SPRING_PROFILES_ACTIVE: test
      # Si no usas application-test.yml, podrías setear aquí también:
      # SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
      # SPRING_DATASOURCE_USERNAME: test_user
      # SPRING_DATASOURCE_PASSWORD: test_password

    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & Test with Maven
        run: mvn -B -DskipTests=false clean verify

      - name: Package JAR (fat jar)
        run: mvn -B -DskipTests package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*-SNAPSHOT.jar

  docker:
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
      packages: write   # para publicar en GHCR con GITHUB_TOKEN

    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
